/// 
Class Demo.Employee Extends (%Persistent,%JSON.Adaptor) [ ClassType = persistent, DdlAllowed, Final, Owner = {SuperUser}, ProcedureBlock, SqlRowIdPrivate, SqlTableName = Employee ]
{

Property ID As %Library.AutoIncrement(%JSONINCLUDE ="outputonly") [ SqlColumnNumber = 2 ]; //change here
Property Name As %Library.String(MAXLEN = 256) [ SqlColumnNumber = 3 ];

Property Title As %Library.String(MAXLEN = 256) [ SqlColumnNumber = 4 ];

Property Department As %Library.String(MAXLEN = 50) [ SqlColumnNumber = 5 ];

Parameter USEEXTENTSET = 1;

/// Bitmap Extent Index auto-generated by DDL CREATE TABLE statement.  Do not edit the SqlName of this index.
Index DDLBEIndex [ Extent, SqlName = "%%DDLBEIndex", Type = bitmap ];

/// DDL Primary Key Specification
Index EMPLOYEEPKEY1 On ID [ PrimaryKey, SqlName = EMPLOYEE_PKEY1, Type = index, Unique ];


ClassMethod fromJSON(j as %String) As %Integer

{
	set e = ..%New() 	//create a new class instance
	do e.%JSONImport(j) 	//call the %JSON.Adapter instance method to import JSON string
 	set e.ID = 0 		//this field must be set to 0 for the %Library.AutoIncrement class to increment correctly
 	
	do e.%Save() 		//this persists the instance
	
	
	
	
	return 1
}


Storage Default
{
<CounterLocation>^Demo.EmployeeC</CounterLocation>
<Data name="EmployeeDefaultData">
<Value name="1">
<Value>ID</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>Title</Value>
</Value>
<Value name="4">
<Value>Department</Value>
</Value>
</Data>
<DataLocation>^CATa.D1Ex.1</DataLocation>
<DefaultData>EmployeeDefaultData</DefaultData>
<ExtentLocation>^CATa.D1Ex</ExtentLocation>
<IdFunction>sequence</IdFunction>
<IdLocation>^CATa.D1Ex.1</IdLocation>
<Index name="DDLBEIndex">
<Location>^CATa.D1Ex.2</Location>
</Index>
<Index name="EMPLOYEEPKEY1">
<Location>^CATa.D1Ex.3</Location>
</Index>
<Index name="IDKEY">
<Location>^CATa.D1Ex.1</Location>
</Index>
<IndexLocation>^CATa.D1Ex.I</IndexLocation>
<StreamLocation>^CATa.D1Ex.S</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
